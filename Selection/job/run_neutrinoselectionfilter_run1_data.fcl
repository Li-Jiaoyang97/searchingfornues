#include "eventweight_microboone.fcl"
#include "microboone_eventweight_service.fcl"
#include "neutrinoselection.fcl"

process_name: NeutrinoSelectionFilter

services:
{
    #Load the service that manages root files for histograms.
    TFileService: { fileName: "neutrinoselection_filt.root" }
    TimeTracker:  {}
    MemoryTracker:     { }     #default is one
    RandomNumberGenerator: {}                     #ART native random number generator
    ExptGeoHelperInterface:         @local::microboone_geometry_helper
    Geometry:                       @local::microboone_geo
    DetectorPropertiesService:             @local::microboone_detproperties
    LArProperties:                  @local::microboone_properties
    DetectorClocksService:          @local::microboone_detectorclocks
    PhotonVisibilityService:    @local::microboone_photonvisibilityservice
    @table::microboone_services_reco
    #@table::microboone_reco_data_services
    message:      @local::standard_info
}

#services.DetectorProperties.NumberTimeSamples:                             6400
#services.DetectorProperties.ReadOutWindowSize:                             6400
services.DetectorClocksService.InheritClockConfig:                         false
services.DetectorClocksService.TriggerOffsetTPC:                          -0.400e3

services.SpaceCharge.EnableCorrSCE: true
services.SpaceCharge.EnableSimEFieldSCE: true
services.SpaceCharge.EnableSimSpatialSCE: true
services.SpaceCharge.RepresentationType: "Voxelized_TH3"
services.SpaceCharge.CalibrationInputFilename: "SpaceCharge/SCEoffsets_dataDriven_combined_bkwd_Jan18.root"

#Force loading ubsim EventWeight calculator libraries instead of larsim default
services.UBEventWeight: @local::microboone_eventweight_service

#source is now a root file
source:
{
    module_type: RootInput
    maxEvents:  -1            # Number of events to create
    fileNames:[
        # "/pnfs/uboone/overlay/uboone/reconstructed/prod_v08_00_00_12/prodgenie_bnb_intrinsic_nue_uboone_overlay_mcc9_TESTv12/run1_reco2/PhysicsRun-2016_2_23_18_49_33-0005122-00012_20160224T070605_ext_unbiased_20160225T030422_merged_gen_20190330T031808_g4_detsim_mix_r1a_r1b_postdlmctrut_716c068e-5113-4230-92e7-2caacb54a3c4.root"
    ]
}

outputs:
{
    rootout:
        {
        module_type: RootOutput
        fileName: "FilteredNuEvents.root"
        compressionLevel: 0
        SelectEvents: [p1]
        dataTier: "ana"
        }
    
    out1:
    {
         module_type: RootOutput
         fileName:    "neutrinoselectionfilter.root"    #default file name, can override from command line with -o or --output
         fastCloning: false
         dataTier: "ana"
    }
}

physics:
{
 producers:
 {
        shrreco3dKalmanShower: @local::shrreco3dKalmanShower
        shrreco3dKalmanShowercalo: @local::shrreco3dKalmanShowercalodata
        shrreco3dKalmanShowercali: @local::shrreco3dKalmanShowercalidata
        # pandoraTrack:                     @local::microboone_pandoraTrackCreation
        # pandoraTrackcalo:                 @local::microboone_calodata
        # pandoraTrackpid:                  @local::microboone_chi2pid
        # pandoraTrackcali:                 @local::microboone_calibrationdedx
        # pandoraTrackcalipid:              @local::microboone_chi2pid
        eventweight:                       @local::microboone_eventweight #Change which event weights are added below
 }
 filters:
 {
        nuselection: @local::NuSelectionFilterEmpty
 }
 analyzers:
 {

 }

 #define the producer and filter modules for this path, order matters,
 ana:  []
#  p1: [ pandoraTrack,  pandoraTrackcalo, pandoraTrackpid, pandoraTrackcali, pandoraTrackcalipid, shrreco3dKalmanShower, shrreco3dKalmanShowercalo, shrreco3dKalmanShowercali, nuselection ]
 p1: [ shrreco3dKalmanShower, shrreco3dKalmanShowercalo, shrreco3dKalmanShowercali,
#  eventweight,
 nuselection ]
#  p2: [ nuselection ]
 e1: [ rootout ]
 #define the output stream, there could be more than one if using filters
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event,
 #ie filters and producers
 trigger_paths: [ p1 ]

 #end_paths is a keyword and contains the paths that do not modify the art::Event,
 #ie analyzers and output streams.  these all run simultaneously
 #end_paths:     [ stream1, ana ]
 end_paths:     [ ana ] #, e1 ]
}

physics.filters.nuselection.SelectionTool: @local::ShowerSelectionTool
physics.filters.nuselection.AnalysisTools.default.BacktrackTag: "" #"gaushitTruthMatch"
physics.filters.nuselection.IsData: true


# physics.producers.pandoraTrack.PFParticleLabel:                                                "pandora"
# physics.producers.pandoraTrack.UseAllParticles:                                                true
# physics.producers.pandoraTrackcalipid.TrackModuleLabel:                                        "pandoraTrack"
# physics.producers.pandoraTrackcalipid.CalorimetryModuleLabel:                                  "pandoraTrackcali"
# physics.producers.pandoraTrackcalipid.Chi2PIDAlg.UseMedian:                                    true

# physics.producers.pandoraTrackcalo.TrackModuleLabel:                                           "pandoraTrack"
# physics.producers.pandoraTrackcalo.SpacePointModuleLabel:                                      "pandora"
# physics.producers.pandoraTrackpid.CalorimetryModuleLabel:                                      "pandoraTrackcalo"
# physics.producers.pandoraTrackpid.TrackModuleLabel:                                            "pandoraTrack"
# physics.producers.pandoraTrackcali.TrackModuleLabel:                                           "pandoraTrack"
# physics.producers.pandoraTrackcali.CalorimetryModuleLabel:                                     "pandoraTrackcalo"

# Control which sets of event weights are run
physics.producers.eventweight.weight_functions: [
  @sequence::microboone_eventweight.weight_functions_flux,
  @sequence::microboone_eventweight.weight_functions_genie,
  @sequence::microboone_eventweight.weight_functions_reint
]